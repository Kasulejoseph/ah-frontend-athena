// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test ReplyBox view should  ReplyBox match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReplyBox
    CommentAction={[MockFunction]}
    CommentEditAction={[MockFunction]}
    ReplyPostAction={[MockFunction]}
    art_slug="mocked-slug"
    childId={null}
    isEdit={false}
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
    onSubmitReply={[MockFunction]}
    parentId="1"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <CommentCard
          childId={null}
          onChange={[Function]}
          onSubmit={[Function]}
          onSubmitReply={[Function]}
        />,
        <ModalPage
          fallback="/"
          md="12"
          modal={false}
          title="Please login before you can rate the article"
          toggle={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "childId": null,
          "onChange": [Function],
          "onSubmit": [Function],
          "onSubmitReply": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fallback": "/",
          "history": undefined,
          "md": "12",
          "modal": false,
          "title": "Please login before you can rate the article",
          "toggle": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <CommentCard
            childId={null}
            onChange={[Function]}
            onSubmit={[Function]}
            onSubmitReply={[Function]}
          />,
          <ModalPage
            fallback="/"
            md="12"
            modal={false}
            title="Please login before you can rate the article"
            toggle={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "childId": null,
            "onChange": [Function],
            "onSubmit": [Function],
            "onSubmitReply": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fallback": "/",
            "history": undefined,
            "md": "12",
            "modal": false,
            "title": "Please login before you can rate the article",
            "toggle": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
