// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ArticleView> matches snapshort 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleView
    article={Object {}}
    canFollow={true}
    canModify={true}
    className=""
    classValue=""
    deleteArticle={[MockFunction]}
    followData={Object {}}
    followUser={[Function]}
    getFollowing={[Function]}
    getSingleArticle={[Function]}
    handleClick={[MockFunction]}
    handleLink={[MockFunction]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    returnData={Object {}}
    setArticleReadCount={[Function]}
    slug=""
    text=""
    toggle={[MockFunction]}
    unFollowUser={[Function]}
    view_article={
      Object {
        "author": Object {
          "username": "henry",
        },
        "body": "this is body",
        "description": "description",
        "title": "title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Load />,
      "className": "center-parent",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Load />,
        "className": "center-parent",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
