// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing not found Test if component mounts 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotFound />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        <h1>
          Page Not Found
        </h1>
        <img
          alt="NotFoud"
          src="notFound.png"
        />
      </div>,
      "className": "w-75 mt-5 pt-5",
      "fluid": false,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Page Not Found
          </h1>,
          <img
            alt="NotFoud"
            src="notFound.png"
          />,
        ],
        "style": Object {
          "textAlign": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Page Not Found",
          },
          "ref": null,
          "rendered": "Page Not Found",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "NotFoud",
            "src": "notFound.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          <h1>
            Page Not Found
          </h1>
          <img
            alt="NotFoud"
            src="notFound.png"
          />
        </div>,
        "className": "w-75 mt-5 pt-5",
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Page Not Found
            </h1>,
            <img
              alt="NotFoud"
              src="notFound.png"
            />,
          ],
          "style": Object {
            "textAlign": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Page Not Found",
            },
            "ref": null,
            "rendered": "Page Not Found",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "NotFoud",
              "src": "notFound.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
