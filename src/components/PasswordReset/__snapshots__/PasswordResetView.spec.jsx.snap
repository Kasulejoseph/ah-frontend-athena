// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test password confirm resetting matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PasswordResetConfirmView
    confirmPassword={Object {}}
    errors={
      Object {
        "email": "",
      }
    }
    newPassword={Object {}}
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
    value={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <t
        className="flex flex-center"
        tag="div"
      >
        <t
          lg={null}
          md="6"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <t
            tag="div"
          >
            <div
              className="header pt-3 blue lighten-2"
            >
              <t
                className="d-flex justify-content-start"
                tag="div"
              >
                <h4
                  className="text-white mt-3 mb-4 pb-1 mx-5"
                >
                  Reset Password
                </h4>
              </t>
            </div>
            <t
              tag="div"
            >
              <form
                onSubmit={[MockFunction]}
              >
                <div
                  className="grey-text"
                >
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="New Password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success="right"
                    tag="input"
                    type="password"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Confirm Password"
                    labelClass=""
                    name="confirmPassword"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <span
                    className=" red-text is-invalid"
                  />
                  <span
                    className=" red-text is-invalid"
                  />
                </div>
                <div
                  className="text-center"
                >
                  <t
                    className="form-control"
                    color="info"
                    fontWeight="600"
                    tag="button"
                    type="submit"
                  >
                    Submit
                  </t>
                </div>
              </form>
            </t>
          </t>
        </t>
      </t>,
      "className": "w-75 mt-5 pt-5 mt-5 mb-5",
      "fluid": false,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          lg={null}
          md="6"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <t
            tag="div"
          >
            <div
              className="header pt-3 blue lighten-2"
            >
              <t
                className="d-flex justify-content-start"
                tag="div"
              >
                <h4
                  className="text-white mt-3 mb-4 pb-1 mx-5"
                >
                  Reset Password
                </h4>
              </t>
            </div>
            <t
              tag="div"
            >
              <form
                onSubmit={[MockFunction]}
              >
                <div
                  className="grey-text"
                >
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="New Password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success="right"
                    tag="input"
                    type="password"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Confirm Password"
                    labelClass=""
                    name="confirmPassword"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <span
                    className=" red-text is-invalid"
                  />
                  <span
                    className=" red-text is-invalid"
                  />
                </div>
                <div
                  className="text-center"
                >
                  <t
                    className="form-control"
                    color="info"
                    fontWeight="600"
                    tag="button"
                    type="submit"
                  >
                    Submit
                  </t>
                </div>
              </form>
            </t>
          </t>
        </t>,
        "className": "flex flex-center",
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            tag="div"
          >
            <div
              className="header pt-3 blue lighten-2"
            >
              <t
                className="d-flex justify-content-start"
                tag="div"
              >
                <h4
                  className="text-white mt-3 mb-4 pb-1 mx-5"
                >
                  Reset Password
                </h4>
              </t>
            </div>
            <t
              tag="div"
            >
              <form
                onSubmit={[MockFunction]}
              >
                <div
                  className="grey-text"
                >
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="New Password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success="right"
                    tag="input"
                    type="password"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Confirm Password"
                    labelClass=""
                    name="confirmPassword"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <span
                    className=" red-text is-invalid"
                  />
                  <span
                    className=" red-text is-invalid"
                  />
                </div>
                <div
                  className="text-center"
                >
                  <t
                    className="form-control"
                    color="info"
                    fontWeight="600"
                    tag="button"
                    type="submit"
                  >
                    Submit
                  </t>
                </div>
              </form>
            </t>
          </t>,
          "lg": null,
          "md": "6",
          "sm": null,
          "tag": "div",
          "xl": null,
          "xs": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Reset Password
                  </h4>
                </t>
              </div>,
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="New Password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Confirm Password"
                      labelClass=""
                      name="confirmPassword"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                  </div>
                  <div
                    className="text-center"
                  >
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Reset Password
                  </h4>
                </t>,
                "className": "header pt-3 blue lighten-2",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Reset Password
                  </h4>,
                  "className": "d-flex justify-content-start",
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reset Password",
                    "className": "text-white mt-3 mb-4 pb-1 mx-5",
                  },
                  "ref": null,
                  "rendered": "Reset Password",
                  "type": "h4",
                },
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="New Password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Confirm Password"
                      labelClass=""
                      name="confirmPassword"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                  </div>
                  <div
                    className="text-center"
                  >
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>,
                "tag": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="grey-text"
                    >
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="New Password"
                        labelClass=""
                        name="password"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="password"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error=""
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Confirm Password"
                        labelClass=""
                        name="confirmPassword"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success=""
                        tag="input"
                        type="password"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <span
                        className=" red-text is-invalid"
                      />
                      <span
                        className=" red-text is-invalid"
                      />
                    </div>,
                    <div
                      className="text-center"
                    >
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>
                    </div>,
                  ],
                  "onSubmit": [MockFunction],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <t
                          className=""
                          containerClass=""
                          disabled={false}
                          error="wrong"
                          filled={false}
                          gap={false}
                          group={true}
                          icon="lock"
                          iconBrand={false}
                          iconClass=""
                          iconLight={false}
                          iconRegular={false}
                          label="New Password"
                          labelClass=""
                          name="password"
                          onChange={[MockFunction]}
                          required={true}
                          size=""
                          success="right"
                          tag="input"
                          type="password"
                          validate={true}
                          value={Object {}}
                          valueDefault=""
                        />,
                        <t
                          className=""
                          containerClass=""
                          disabled={false}
                          error=""
                          filled={false}
                          gap={false}
                          group={true}
                          icon="lock"
                          iconBrand={false}
                          iconClass=""
                          iconLight={false}
                          iconRegular={false}
                          label="Confirm Password"
                          labelClass=""
                          name="confirmPassword"
                          onChange={[MockFunction]}
                          required={true}
                          size=""
                          success=""
                          tag="input"
                          type="password"
                          validate={true}
                          value={Object {}}
                          valueDefault=""
                        />,
                        <span
                          className=" red-text is-invalid"
                        />,
                        <span
                          className=" red-text is-invalid"
                        />,
                      ],
                      "className": "grey-text",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "",
                          "containerClass": "",
                          "disabled": false,
                          "error": "wrong",
                          "filled": false,
                          "gap": false,
                          "group": true,
                          "hint": undefined,
                          "icon": "lock",
                          "iconBrand": false,
                          "iconClass": "",
                          "iconLight": false,
                          "iconRegular": false,
                          "iconSize": undefined,
                          "id": undefined,
                          "label": "New Password",
                          "labelClass": "",
                          "name": "password",
                          "onChange": [MockFunction],
                          "required": true,
                          "size": "",
                          "success": "right",
                          "tag": "input",
                          "type": "password",
                          "validate": true,
                          "value": Object {},
                          "valueDefault": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "",
                          "containerClass": "",
                          "disabled": false,
                          "error": "",
                          "filled": false,
                          "gap": false,
                          "group": true,
                          "hint": undefined,
                          "icon": "lock",
                          "iconBrand": false,
                          "iconClass": "",
                          "iconLight": false,
                          "iconRegular": false,
                          "iconSize": undefined,
                          "id": undefined,
                          "label": "Confirm Password",
                          "labelClass": "",
                          "name": "confirmPassword",
                          "onChange": [MockFunction],
                          "required": true,
                          "size": "",
                          "success": "",
                          "tag": "input",
                          "type": "password",
                          "validate": true,
                          "value": Object {},
                          "valueDefault": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": " red-text is-invalid",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": " red-text is-invalid",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>,
                      "className": "text-center",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Submit",
                        "className": "form-control",
                        "color": "info",
                        "fontWeight": "600",
                        "tag": "button",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Submit",
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "form",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          className="flex flex-center"
          tag="div"
        >
          <t
            lg={null}
            md="6"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Reset Password
                  </h4>
                </t>
              </div>
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="New Password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Confirm Password"
                      labelClass=""
                      name="confirmPassword"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                  </div>
                  <div
                    className="text-center"
                  >
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>
            </t>
          </t>
        </t>,
        "className": "w-75 mt-5 pt-5 mt-5 mb-5",
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            lg={null}
            md="6"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Reset Password
                  </h4>
                </t>
              </div>
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="New Password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Confirm Password"
                      labelClass=""
                      name="confirmPassword"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                  </div>
                  <div
                    className="text-center"
                  >
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>
            </t>
          </t>,
          "className": "flex flex-center",
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <t
              tag="div"
            >
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Reset Password
                  </h4>
                </t>
              </div>
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="New Password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Confirm Password"
                      labelClass=""
                      name="confirmPassword"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                    <span
                      className=" red-text is-invalid"
                    />
                  </div>
                  <div
                    className="text-center"
                  >
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>
            </t>,
            "lg": null,
            "md": "6",
            "sm": null,
            "tag": "div",
            "xl": null,
            "xs": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="header pt-3 blue lighten-2"
                >
                  <t
                    className="d-flex justify-content-start"
                    tag="div"
                  >
                    <h4
                      className="text-white mt-3 mb-4 pb-1 mx-5"
                    >
                      Reset Password
                    </h4>
                  </t>
                </div>,
                <t
                  tag="div"
                >
                  <form
                    onSubmit={[MockFunction]}
                  >
                    <div
                      className="grey-text"
                    >
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="New Password"
                        labelClass=""
                        name="password"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="password"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error=""
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Confirm Password"
                        labelClass=""
                        name="confirmPassword"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success=""
                        tag="input"
                        type="password"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <span
                        className=" red-text is-invalid"
                      />
                      <span
                        className=" red-text is-invalid"
                      />
                    </div>
                    <div
                      className="text-center"
                    >
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>
                    </div>
                  </form>
                </t>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <t
                    className="d-flex justify-content-start"
                    tag="div"
                  >
                    <h4
                      className="text-white mt-3 mb-4 pb-1 mx-5"
                    >
                      Reset Password
                    </h4>
                  </t>,
                  "className": "header pt-3 blue lighten-2",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h4
                      className="text-white mt-3 mb-4 pb-1 mx-5"
                    >
                      Reset Password
                    </h4>,
                    "className": "d-flex justify-content-start",
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Reset Password",
                      "className": "text-white mt-3 mb-4 pb-1 mx-5",
                    },
                    "ref": null,
                    "rendered": "Reset Password",
                    "type": "h4",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <form
                    onSubmit={[MockFunction]}
                  >
                    <div
                      className="grey-text"
                    >
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="New Password"
                        labelClass=""
                        name="password"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="password"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error=""
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Confirm Password"
                        labelClass=""
                        name="confirmPassword"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success=""
                        tag="input"
                        type="password"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <span
                        className=" red-text is-invalid"
                      />
                      <span
                        className=" red-text is-invalid"
                      />
                    </div>
                    <div
                      className="text-center"
                    >
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>
                    </div>
                  </form>,
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="grey-text"
                      >
                        <t
                          className=""
                          containerClass=""
                          disabled={false}
                          error="wrong"
                          filled={false}
                          gap={false}
                          group={true}
                          icon="lock"
                          iconBrand={false}
                          iconClass=""
                          iconLight={false}
                          iconRegular={false}
                          label="New Password"
                          labelClass=""
                          name="password"
                          onChange={[MockFunction]}
                          required={true}
                          size=""
                          success="right"
                          tag="input"
                          type="password"
                          validate={true}
                          value={Object {}}
                          valueDefault=""
                        />
                        <t
                          className=""
                          containerClass=""
                          disabled={false}
                          error=""
                          filled={false}
                          gap={false}
                          group={true}
                          icon="lock"
                          iconBrand={false}
                          iconClass=""
                          iconLight={false}
                          iconRegular={false}
                          label="Confirm Password"
                          labelClass=""
                          name="confirmPassword"
                          onChange={[MockFunction]}
                          required={true}
                          size=""
                          success=""
                          tag="input"
                          type="password"
                          validate={true}
                          value={Object {}}
                          valueDefault=""
                        />
                        <span
                          className=" red-text is-invalid"
                        />
                        <span
                          className=" red-text is-invalid"
                        />
                      </div>,
                      <div
                        className="text-center"
                      >
                        <t
                          className="form-control"
                          color="info"
                          fontWeight="600"
                          tag="button"
                          type="submit"
                        >
                          Submit
                        </t>
                      </div>,
                    ],
                    "onSubmit": [MockFunction],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <t
                            className=""
                            containerClass=""
                            disabled={false}
                            error="wrong"
                            filled={false}
                            gap={false}
                            group={true}
                            icon="lock"
                            iconBrand={false}
                            iconClass=""
                            iconLight={false}
                            iconRegular={false}
                            label="New Password"
                            labelClass=""
                            name="password"
                            onChange={[MockFunction]}
                            required={true}
                            size=""
                            success="right"
                            tag="input"
                            type="password"
                            validate={true}
                            value={Object {}}
                            valueDefault=""
                          />,
                          <t
                            className=""
                            containerClass=""
                            disabled={false}
                            error=""
                            filled={false}
                            gap={false}
                            group={true}
                            icon="lock"
                            iconBrand={false}
                            iconClass=""
                            iconLight={false}
                            iconRegular={false}
                            label="Confirm Password"
                            labelClass=""
                            name="confirmPassword"
                            onChange={[MockFunction]}
                            required={true}
                            size=""
                            success=""
                            tag="input"
                            type="password"
                            validate={true}
                            value={Object {}}
                            valueDefault=""
                          />,
                          <span
                            className=" red-text is-invalid"
                          />,
                          <span
                            className=" red-text is-invalid"
                          />,
                        ],
                        "className": "grey-text",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "className": "",
                            "containerClass": "",
                            "disabled": false,
                            "error": "wrong",
                            "filled": false,
                            "gap": false,
                            "group": true,
                            "hint": undefined,
                            "icon": "lock",
                            "iconBrand": false,
                            "iconClass": "",
                            "iconLight": false,
                            "iconRegular": false,
                            "iconSize": undefined,
                            "id": undefined,
                            "label": "New Password",
                            "labelClass": "",
                            "name": "password",
                            "onChange": [MockFunction],
                            "required": true,
                            "size": "",
                            "success": "right",
                            "tag": "input",
                            "type": "password",
                            "validate": true,
                            "value": Object {},
                            "valueDefault": "",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "className": "",
                            "containerClass": "",
                            "disabled": false,
                            "error": "",
                            "filled": false,
                            "gap": false,
                            "group": true,
                            "hint": undefined,
                            "icon": "lock",
                            "iconBrand": false,
                            "iconClass": "",
                            "iconLight": false,
                            "iconRegular": false,
                            "iconSize": undefined,
                            "id": undefined,
                            "label": "Confirm Password",
                            "labelClass": "",
                            "name": "confirmPassword",
                            "onChange": [MockFunction],
                            "required": true,
                            "size": "",
                            "success": "",
                            "tag": "input",
                            "type": "password",
                            "validate": true,
                            "value": Object {},
                            "valueDefault": "",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                            "className": " red-text is-invalid",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                            "className": " red-text is-invalid",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <t
                          className="form-control"
                          color="info"
                          fontWeight="600"
                          tag="button"
                          type="submit"
                        >
                          Submit
                        </t>,
                        "className": "text-center",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Submit",
                          "className": "form-control",
                          "color": "info",
                          "fontWeight": "600",
                          "tag": "button",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Submit",
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "form",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`test password email view matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PasswordResetView
    email={Object {}}
    errors={
      Object {
        "email": "",
      }
    }
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
    value={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <t
        className="flex flex-center"
        tag="div"
      >
        <t
          lg={null}
          md="6"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <t
            tag="div"
          >
            <div
              className="header pt-3 blue lighten-2"
            >
              <t
                className="d-flex justify-content-start"
                tag="div"
              >
                <h4
                  className="text-white mt-3 mb-4 pb-1 mx-5"
                >
                  Forgot Password?
                </h4>
              </t>
            </div>
            <t
              tag="div"
            >
              <form
                onSubmit={[MockFunction]}
              >
                <div
                  className="grey-text"
                >
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Type your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success="right"
                    tag="input"
                    type="email"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <span
                    className=" red-text is-invalid"
                  >
                    
                  </span>
                  <t
                    className="form-control"
                    color="info"
                    fontWeight="600"
                    tag="button"
                    type="submit"
                  >
                    Submit
                  </t>
                </div>
              </form>
            </t>
          </t>
        </t>
      </t>,
      "className": "w-75 mt-5 pt-5 mt-5 mb-5",
      "fluid": false,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          lg={null}
          md="6"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <t
            tag="div"
          >
            <div
              className="header pt-3 blue lighten-2"
            >
              <t
                className="d-flex justify-content-start"
                tag="div"
              >
                <h4
                  className="text-white mt-3 mb-4 pb-1 mx-5"
                >
                  Forgot Password?
                </h4>
              </t>
            </div>
            <t
              tag="div"
            >
              <form
                onSubmit={[MockFunction]}
              >
                <div
                  className="grey-text"
                >
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Type your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success="right"
                    tag="input"
                    type="email"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <span
                    className=" red-text is-invalid"
                  >
                    
                  </span>
                  <t
                    className="form-control"
                    color="info"
                    fontWeight="600"
                    tag="button"
                    type="submit"
                  >
                    Submit
                  </t>
                </div>
              </form>
            </t>
          </t>
        </t>,
        "className": "flex flex-center",
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            tag="div"
          >
            <div
              className="header pt-3 blue lighten-2"
            >
              <t
                className="d-flex justify-content-start"
                tag="div"
              >
                <h4
                  className="text-white mt-3 mb-4 pb-1 mx-5"
                >
                  Forgot Password?
                </h4>
              </t>
            </div>
            <t
              tag="div"
            >
              <form
                onSubmit={[MockFunction]}
              >
                <div
                  className="grey-text"
                >
                  <t
                    className=""
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Type your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success="right"
                    tag="input"
                    type="email"
                    validate={true}
                    value={Object {}}
                    valueDefault=""
                  />
                  <span
                    className=" red-text is-invalid"
                  >
                    
                  </span>
                  <t
                    className="form-control"
                    color="info"
                    fontWeight="600"
                    tag="button"
                    type="submit"
                  >
                    Submit
                  </t>
                </div>
              </form>
            </t>
          </t>,
          "lg": null,
          "md": "6",
          "sm": null,
          "tag": "div",
          "xl": null,
          "xs": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Forgot Password?
                  </h4>
                </t>
              </div>,
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Type your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="email"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    >
                      
                    </span>
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Forgot Password?
                  </h4>
                </t>,
                "className": "header pt-3 blue lighten-2",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Forgot Password?
                  </h4>,
                  "className": "d-flex justify-content-start",
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Forgot Password?",
                    "className": "text-white mt-3 mb-4 pb-1 mx-5",
                  },
                  "ref": null,
                  "rendered": "Forgot Password?",
                  "type": "h4",
                },
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Type your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="email"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    >
                      
                    </span>
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>,
                "tag": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Type your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="email"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    >
                      
                    </span>
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>,
                  "onSubmit": [MockFunction],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="envelope"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Type your email"
                        labelClass=""
                        name="email"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="email"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />,
                      <span
                        className=" red-text is-invalid"
                      >
                        
                      </span>,
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>,
                    ],
                    "className": "grey-text",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "",
                        "containerClass": "",
                        "disabled": false,
                        "error": "wrong",
                        "filled": false,
                        "gap": false,
                        "group": true,
                        "hint": undefined,
                        "icon": "envelope",
                        "iconBrand": false,
                        "iconClass": "",
                        "iconLight": false,
                        "iconRegular": false,
                        "iconSize": undefined,
                        "id": undefined,
                        "label": "Type your email",
                        "labelClass": "",
                        "name": "email",
                        "onChange": [MockFunction],
                        "required": true,
                        "size": "",
                        "success": "right",
                        "tag": "input",
                        "type": "email",
                        "validate": true,
                        "value": Object {},
                        "valueDefault": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "",
                        "className": " red-text is-invalid",
                      },
                      "ref": null,
                      "rendered": "",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Submit",
                        "className": "form-control",
                        "color": "info",
                        "fontWeight": "600",
                        "tag": "button",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Submit",
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                "type": "form",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          className="flex flex-center"
          tag="div"
        >
          <t
            lg={null}
            md="6"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Forgot Password?
                  </h4>
                </t>
              </div>
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Type your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="email"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    >
                      
                    </span>
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>
            </t>
          </t>
        </t>,
        "className": "w-75 mt-5 pt-5 mt-5 mb-5",
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            lg={null}
            md="6"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Forgot Password?
                  </h4>
                </t>
              </div>
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Type your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="email"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    >
                      
                    </span>
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>
            </t>
          </t>,
          "className": "flex flex-center",
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <t
              tag="div"
            >
              <div
                className="header pt-3 blue lighten-2"
              >
                <t
                  className="d-flex justify-content-start"
                  tag="div"
                >
                  <h4
                    className="text-white mt-3 mb-4 pb-1 mx-5"
                  >
                    Forgot Password?
                  </h4>
                </t>
              </div>
              <t
                tag="div"
              >
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="grey-text"
                  >
                    <t
                      className=""
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Type your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success="right"
                      tag="input"
                      type="email"
                      validate={true}
                      value={Object {}}
                      valueDefault=""
                    />
                    <span
                      className=" red-text is-invalid"
                    >
                      
                    </span>
                    <t
                      className="form-control"
                      color="info"
                      fontWeight="600"
                      tag="button"
                      type="submit"
                    >
                      Submit
                    </t>
                  </div>
                </form>
              </t>
            </t>,
            "lg": null,
            "md": "6",
            "sm": null,
            "tag": "div",
            "xl": null,
            "xs": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="header pt-3 blue lighten-2"
                >
                  <t
                    className="d-flex justify-content-start"
                    tag="div"
                  >
                    <h4
                      className="text-white mt-3 mb-4 pb-1 mx-5"
                    >
                      Forgot Password?
                    </h4>
                  </t>
                </div>,
                <t
                  tag="div"
                >
                  <form
                    onSubmit={[MockFunction]}
                  >
                    <div
                      className="grey-text"
                    >
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="envelope"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Type your email"
                        labelClass=""
                        name="email"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="email"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <span
                        className=" red-text is-invalid"
                      >
                        
                      </span>
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>
                    </div>
                  </form>
                </t>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <t
                    className="d-flex justify-content-start"
                    tag="div"
                  >
                    <h4
                      className="text-white mt-3 mb-4 pb-1 mx-5"
                    >
                      Forgot Password?
                    </h4>
                  </t>,
                  "className": "header pt-3 blue lighten-2",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h4
                      className="text-white mt-3 mb-4 pb-1 mx-5"
                    >
                      Forgot Password?
                    </h4>,
                    "className": "d-flex justify-content-start",
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Forgot Password?",
                      "className": "text-white mt-3 mb-4 pb-1 mx-5",
                    },
                    "ref": null,
                    "rendered": "Forgot Password?",
                    "type": "h4",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <form
                    onSubmit={[MockFunction]}
                  >
                    <div
                      className="grey-text"
                    >
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="envelope"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Type your email"
                        labelClass=""
                        name="email"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="email"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <span
                        className=" red-text is-invalid"
                      >
                        
                      </span>
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>
                    </div>
                  </form>,
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="grey-text"
                    >
                      <t
                        className=""
                        containerClass=""
                        disabled={false}
                        error="wrong"
                        filled={false}
                        gap={false}
                        group={true}
                        icon="envelope"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Type your email"
                        labelClass=""
                        name="email"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success="right"
                        tag="input"
                        type="email"
                        validate={true}
                        value={Object {}}
                        valueDefault=""
                      />
                      <span
                        className=" red-text is-invalid"
                      >
                        
                      </span>
                      <t
                        className="form-control"
                        color="info"
                        fontWeight="600"
                        tag="button"
                        type="submit"
                      >
                        Submit
                      </t>
                    </div>,
                    "onSubmit": [MockFunction],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <t
                          className=""
                          containerClass=""
                          disabled={false}
                          error="wrong"
                          filled={false}
                          gap={false}
                          group={true}
                          icon="envelope"
                          iconBrand={false}
                          iconClass=""
                          iconLight={false}
                          iconRegular={false}
                          label="Type your email"
                          labelClass=""
                          name="email"
                          onChange={[MockFunction]}
                          required={true}
                          size=""
                          success="right"
                          tag="input"
                          type="email"
                          validate={true}
                          value={Object {}}
                          valueDefault=""
                        />,
                        <span
                          className=" red-text is-invalid"
                        >
                          
                        </span>,
                        <t
                          className="form-control"
                          color="info"
                          fontWeight="600"
                          tag="button"
                          type="submit"
                        >
                          Submit
                        </t>,
                      ],
                      "className": "grey-text",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "className": "",
                          "containerClass": "",
                          "disabled": false,
                          "error": "wrong",
                          "filled": false,
                          "gap": false,
                          "group": true,
                          "hint": undefined,
                          "icon": "envelope",
                          "iconBrand": false,
                          "iconClass": "",
                          "iconLight": false,
                          "iconRegular": false,
                          "iconSize": undefined,
                          "id": undefined,
                          "label": "Type your email",
                          "labelClass": "",
                          "name": "email",
                          "onChange": [MockFunction],
                          "required": true,
                          "size": "",
                          "success": "right",
                          "tag": "input",
                          "type": "email",
                          "validate": true,
                          "value": Object {},
                          "valueDefault": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "",
                          "className": " red-text is-invalid",
                        },
                        "ref": null,
                        "rendered": "",
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Submit",
                          "className": "form-control",
                          "color": "info",
                          "fontWeight": "600",
                          "tag": "button",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Submit",
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": "form",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
