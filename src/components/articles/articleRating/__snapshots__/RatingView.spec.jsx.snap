// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RatingView /> empty star display 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Star
    index={2}
    isFull={false}
    options={
      Object {
        "handleKeyDown": [MockFunction],
        "starClick": [MockFunction] {
          "calls": Array [
            Array [
              2,
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <t
          border={false}
          brand={false}
          className="primary-text-color star-hover d-none"
          fab={false}
          fal={false}
          far={false}
          fixed={false}
          flip=""
          icon="star"
          inverse=""
          light={false}
          list={false}
          pull=""
          pulse={false}
          regular={false}
          rotate=""
          size=""
          spin={false}
          stack=""
        />,
        <span
          className="primary-text-color star-hover"
          href="#"
        >
          <i
            className="fa fa-star-o"
          />
        </span>,
      ],
      "onClick": [Function],
      "onKeyUp": [MockFunction],
      "role": "link",
      "tabIndex": -1,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "border": false,
          "brand": false,
          "className": "primary-text-color star-hover d-none",
          "fab": false,
          "fal": false,
          "far": false,
          "fixed": false,
          "flip": "",
          "icon": "star",
          "inverse": "",
          "light": false,
          "list": false,
          "pull": "",
          "pulse": false,
          "regular": false,
          "rotate": "",
          "size": "",
          "spin": false,
          "stack": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-star-o"
          />,
          "className": "primary-text-color star-hover",
          "href": "#",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-star-o",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <t
            border={false}
            brand={false}
            className="primary-text-color star-hover d-none"
            fab={false}
            fal={false}
            far={false}
            fixed={false}
            flip=""
            icon="star"
            inverse=""
            light={false}
            list={false}
            pull=""
            pulse={false}
            regular={false}
            rotate=""
            size=""
            spin={false}
            stack=""
          />,
          <span
            className="primary-text-color star-hover"
            href="#"
          >
            <i
              className="fa fa-star-o"
            />
          </span>,
        ],
        "onClick": [Function],
        "onKeyUp": [MockFunction],
        "role": "link",
        "tabIndex": -1,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "border": false,
            "brand": false,
            "className": "primary-text-color star-hover d-none",
            "fab": false,
            "fal": false,
            "far": false,
            "fixed": false,
            "flip": "",
            "icon": "star",
            "inverse": "",
            "light": false,
            "list": false,
            "pull": "",
            "pulse": false,
            "regular": false,
            "rotate": "",
            "size": "",
            "spin": false,
            "stack": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-star-o"
            />,
            "className": "primary-text-color star-hover",
            "href": "#",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-star-o",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<RatingView /> full star matches snapshort 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Star
    index={2}
    isFull={true}
    options={
      Object {
        "handleKeyDown": [MockFunction],
        "starClick": [MockFunction] {
          "calls": Array [
            Array [
              2,
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <t
          border={false}
          brand={false}
          className="primary-text-color star-hover "
          fab={false}
          fal={false}
          far={false}
          fixed={false}
          flip=""
          icon="star"
          inverse=""
          light={false}
          list={false}
          pull=""
          pulse={false}
          regular={false}
          rotate=""
          size=""
          spin={false}
          stack=""
        />,
        <span
          className="primary-text-color star-hover d-none"
          href="#"
        >
          <i
            className="fa fa-star-o"
          />
        </span>,
      ],
      "onClick": [Function],
      "onKeyUp": [MockFunction],
      "role": "link",
      "tabIndex": -1,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "border": false,
          "brand": false,
          "className": "primary-text-color star-hover ",
          "fab": false,
          "fal": false,
          "far": false,
          "fixed": false,
          "flip": "",
          "icon": "star",
          "inverse": "",
          "light": false,
          "list": false,
          "pull": "",
          "pulse": false,
          "regular": false,
          "rotate": "",
          "size": "",
          "spin": false,
          "stack": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-star-o"
          />,
          "className": "primary-text-color star-hover d-none",
          "href": "#",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-star-o",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <t
            border={false}
            brand={false}
            className="primary-text-color star-hover "
            fab={false}
            fal={false}
            far={false}
            fixed={false}
            flip=""
            icon="star"
            inverse=""
            light={false}
            list={false}
            pull=""
            pulse={false}
            regular={false}
            rotate=""
            size=""
            spin={false}
            stack=""
          />,
          <span
            className="primary-text-color star-hover d-none"
            href="#"
          >
            <i
              className="fa fa-star-o"
            />
          </span>,
        ],
        "onClick": [Function],
        "onKeyUp": [MockFunction],
        "role": "link",
        "tabIndex": -1,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "border": false,
            "brand": false,
            "className": "primary-text-color star-hover ",
            "fab": false,
            "fal": false,
            "far": false,
            "fixed": false,
            "flip": "",
            "icon": "star",
            "inverse": "",
            "light": false,
            "list": false,
            "pull": "",
            "pulse": false,
            "regular": false,
            "rotate": "",
            "size": "",
            "spin": false,
            "stack": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-star-o"
            />,
            "className": "primary-text-color star-hover d-none",
            "href": "#",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-star-o",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<RatingView /> matches snapshort 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(RatingView)
    newRate={3}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
