// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Editor /> matches snapshort 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Editor
    handleBodyChange={[Function]}
    handleChange={[Function]}
    handleSubmit={[Function]}
    handleTags={[Function]}
    state={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <t
        tag="div"
      >
        <t
          lg={null}
          md="12"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <form>
            <div
              className="grey-text"
            >
              <t
                className="border-0"
                containerClass=""
                disabled={false}
                error="wrong"
                filled={false}
                gap={false}
                group={true}
                icon=""
                iconBrand={false}
                iconClass=""
                iconLight={false}
                iconRegular={false}
                label="Title"
                labelClass=""
                name="title"
                onChange={[Function]}
                size=""
                success="right"
                tag="input"
                type="text"
                validate={true}
                valueDefault=""
              />
              <t
                className="border-0"
                containerClass=""
                disabled={false}
                error="wrong"
                filled={false}
                gap={false}
                group={true}
                icon=""
                iconBrand={false}
                iconClass=""
                iconLight={false}
                iconRegular={false}
                label="Description"
                labelClass=""
                name="description"
                onChange={[Function]}
                size=""
                success="right"
                tag="input"
                type="text"
                validate={true}
                valueDefault=""
              />
              <Quill
                className="border-0"
                formats={
                  Array [
                    "header",
                    "font",
                    "size",
                    "italic",
                    "underline",
                    "strike",
                    "bold",
                    "blockquote",
                    "list",
                    "link",
                    "image",
                    "video",
                    "code-block",
                    "indent",
                    "align",
                    "color",
                    "background",
                    "script",
                    "script",
                  ]
                }
                modules={
                  Object {
                    "toolbar": Object {
                      "container": Array [
                        Array [
                          Object {
                            "font": Array [],
                          },
                        ],
                        Array [
                          Object {
                            "size": Array [
                              "small",
                              false,
                              "large",
                              "huge",
                            ],
                          },
                        ],
                        Array [
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                        ],
                        Array [
                          Object {
                            "script": "sub",
                          },
                          Object {
                            "script": "super",
                          },
                        ],
                        Array [
                          "blockquote",
                          "code-block",
                        ],
                        Array [
                          Object {
                            "list": "ordered",
                          },
                          Object {
                            "list": "bullet",
                          },
                        ],
                        Array [
                          Object {
                            "indent": "-1",
                          },
                          Object {
                            "indent": "+1",
                          },
                        ],
                        Array [
                          Object {
                            "color": Array [],
                          },
                          Object {
                            "background": Array [],
                          },
                        ],
                        Array [
                          "link",
                          "image",
                          "video",
                        ],
                        Array [
                          Object {
                            "align": Array [],
                          },
                        ],
                        Array [
                          "clean",
                        ],
                      ],
                    },
                  }
                }
                name="body"
                onChange={[Function]}
                placeholder="Article body"
                theme="snow"
              />
              <TagInput
                className="border-0"
                error="wrong"
                group={true}
                handleTags={[Function]}
                label="Tags"
                success="right"
                tagList={Array []}
                type="text"
                validate={true}
              />
            </div>
            <div
              className="text-center"
            >
              <button
                className="btn btn-primary btn-sm"
                id="publish-btn"
                name="draft"
                onClick={[Function]}
                type="submit"
              >
                Save Draft
              </button>
            </div>
            <div
              className="text-center"
            >
              <button
                className="btn btn-primary btn-sm"
                id="publish-btn"
                name="publish"
                onClick={[Function]}
                type="submit"
              >
                Publish
              </button>
            </div>
          </form>
        </t>
      </t>,
      "className": " mt-5 pt-5",
      "fluid": false,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          lg={null}
          md="12"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <form>
            <div
              className="grey-text"
            >
              <t
                className="border-0"
                containerClass=""
                disabled={false}
                error="wrong"
                filled={false}
                gap={false}
                group={true}
                icon=""
                iconBrand={false}
                iconClass=""
                iconLight={false}
                iconRegular={false}
                label="Title"
                labelClass=""
                name="title"
                onChange={[Function]}
                size=""
                success="right"
                tag="input"
                type="text"
                validate={true}
                valueDefault=""
              />
              <t
                className="border-0"
                containerClass=""
                disabled={false}
                error="wrong"
                filled={false}
                gap={false}
                group={true}
                icon=""
                iconBrand={false}
                iconClass=""
                iconLight={false}
                iconRegular={false}
                label="Description"
                labelClass=""
                name="description"
                onChange={[Function]}
                size=""
                success="right"
                tag="input"
                type="text"
                validate={true}
                valueDefault=""
              />
              <Quill
                className="border-0"
                formats={
                  Array [
                    "header",
                    "font",
                    "size",
                    "italic",
                    "underline",
                    "strike",
                    "bold",
                    "blockquote",
                    "list",
                    "link",
                    "image",
                    "video",
                    "code-block",
                    "indent",
                    "align",
                    "color",
                    "background",
                    "script",
                    "script",
                  ]
                }
                modules={
                  Object {
                    "toolbar": Object {
                      "container": Array [
                        Array [
                          Object {
                            "font": Array [],
                          },
                        ],
                        Array [
                          Object {
                            "size": Array [
                              "small",
                              false,
                              "large",
                              "huge",
                            ],
                          },
                        ],
                        Array [
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                        ],
                        Array [
                          Object {
                            "script": "sub",
                          },
                          Object {
                            "script": "super",
                          },
                        ],
                        Array [
                          "blockquote",
                          "code-block",
                        ],
                        Array [
                          Object {
                            "list": "ordered",
                          },
                          Object {
                            "list": "bullet",
                          },
                        ],
                        Array [
                          Object {
                            "indent": "-1",
                          },
                          Object {
                            "indent": "+1",
                          },
                        ],
                        Array [
                          Object {
                            "color": Array [],
                          },
                          Object {
                            "background": Array [],
                          },
                        ],
                        Array [
                          "link",
                          "image",
                          "video",
                        ],
                        Array [
                          Object {
                            "align": Array [],
                          },
                        ],
                        Array [
                          "clean",
                        ],
                      ],
                    },
                  }
                }
                name="body"
                onChange={[Function]}
                placeholder="Article body"
                theme="snow"
              />
              <TagInput
                className="border-0"
                error="wrong"
                group={true}
                handleTags={[Function]}
                label="Tags"
                success="right"
                tagList={Array []}
                type="text"
                validate={true}
              />
            </div>
            <div
              className="text-center"
            >
              <button
                className="btn btn-primary btn-sm"
                id="publish-btn"
                name="draft"
                onClick={[Function]}
                type="submit"
              >
                Save Draft
              </button>
            </div>
            <div
              className="text-center"
            >
              <button
                className="btn btn-primary btn-sm"
                id="publish-btn"
                name="publish"
                onClick={[Function]}
                type="submit"
              >
                Publish
              </button>
            </div>
          </form>
        </t>,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form>
            <div
              className="grey-text"
            >
              <t
                className="border-0"
                containerClass=""
                disabled={false}
                error="wrong"
                filled={false}
                gap={false}
                group={true}
                icon=""
                iconBrand={false}
                iconClass=""
                iconLight={false}
                iconRegular={false}
                label="Title"
                labelClass=""
                name="title"
                onChange={[Function]}
                size=""
                success="right"
                tag="input"
                type="text"
                validate={true}
                valueDefault=""
              />
              <t
                className="border-0"
                containerClass=""
                disabled={false}
                error="wrong"
                filled={false}
                gap={false}
                group={true}
                icon=""
                iconBrand={false}
                iconClass=""
                iconLight={false}
                iconRegular={false}
                label="Description"
                labelClass=""
                name="description"
                onChange={[Function]}
                size=""
                success="right"
                tag="input"
                type="text"
                validate={true}
                valueDefault=""
              />
              <Quill
                className="border-0"
                formats={
                  Array [
                    "header",
                    "font",
                    "size",
                    "italic",
                    "underline",
                    "strike",
                    "bold",
                    "blockquote",
                    "list",
                    "link",
                    "image",
                    "video",
                    "code-block",
                    "indent",
                    "align",
                    "color",
                    "background",
                    "script",
                    "script",
                  ]
                }
                modules={
                  Object {
                    "toolbar": Object {
                      "container": Array [
                        Array [
                          Object {
                            "font": Array [],
                          },
                        ],
                        Array [
                          Object {
                            "size": Array [
                              "small",
                              false,
                              "large",
                              "huge",
                            ],
                          },
                        ],
                        Array [
                          "bold",
                          "italic",
                          "underline",
                          "strike",
                        ],
                        Array [
                          Object {
                            "script": "sub",
                          },
                          Object {
                            "script": "super",
                          },
                        ],
                        Array [
                          "blockquote",
                          "code-block",
                        ],
                        Array [
                          Object {
                            "list": "ordered",
                          },
                          Object {
                            "list": "bullet",
                          },
                        ],
                        Array [
                          Object {
                            "indent": "-1",
                          },
                          Object {
                            "indent": "+1",
                          },
                        ],
                        Array [
                          Object {
                            "color": Array [],
                          },
                          Object {
                            "background": Array [],
                          },
                        ],
                        Array [
                          "link",
                          "image",
                          "video",
                        ],
                        Array [
                          Object {
                            "align": Array [],
                          },
                        ],
                        Array [
                          "clean",
                        ],
                      ],
                    },
                  }
                }
                name="body"
                onChange={[Function]}
                placeholder="Article body"
                theme="snow"
              />
              <TagInput
                className="border-0"
                error="wrong"
                group={true}
                handleTags={[Function]}
                label="Tags"
                success="right"
                tagList={Array []}
                type="text"
                validate={true}
              />
            </div>
            <div
              className="text-center"
            >
              <button
                className="btn btn-primary btn-sm"
                id="publish-btn"
                name="draft"
                onClick={[Function]}
                type="submit"
              >
                Save Draft
              </button>
            </div>
            <div
              className="text-center"
            >
              <button
                className="btn btn-primary btn-sm"
                id="publish-btn"
                name="publish"
                onClick={[Function]}
                type="submit"
              >
                Publish
              </button>
            </div>
          </form>,
          "lg": null,
          "md": "12",
          "sm": null,
          "tag": "div",
          "xl": null,
          "xs": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="grey-text"
              >
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Title"
                  labelClass=""
                  name="title"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Description"
                  labelClass=""
                  name="description"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <Quill
                  className="border-0"
                  formats={
                    Array [
                      "header",
                      "font",
                      "size",
                      "italic",
                      "underline",
                      "strike",
                      "bold",
                      "blockquote",
                      "list",
                      "link",
                      "image",
                      "video",
                      "code-block",
                      "indent",
                      "align",
                      "color",
                      "background",
                      "script",
                      "script",
                    ]
                  }
                  modules={
                    Object {
                      "toolbar": Object {
                        "container": Array [
                          Array [
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [
                                "small",
                                false,
                                "large",
                                "huge",
                              ],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                          ],
                          Array [
                            Object {
                              "script": "sub",
                            },
                            Object {
                              "script": "super",
                            },
                          ],
                          Array [
                            "blockquote",
                            "code-block",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            Object {
                              "indent": "-1",
                            },
                            Object {
                              "indent": "+1",
                            },
                          ],
                          Array [
                            Object {
                              "color": Array [],
                            },
                            Object {
                              "background": Array [],
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            Object {
                              "align": Array [],
                            },
                          ],
                          Array [
                            "clean",
                          ],
                        ],
                      },
                    }
                  }
                  name="body"
                  onChange={[Function]}
                  placeholder="Article body"
                  theme="snow"
                />
                <TagInput
                  className="border-0"
                  error="wrong"
                  group={true}
                  handleTags={[Function]}
                  label="Tags"
                  success="right"
                  tagList={Array []}
                  type="text"
                  validate={true}
                />
              </div>,
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="draft"
                  onClick={[Function]}
                  type="submit"
                >
                  Save Draft
                </button>
              </div>,
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="publish"
                  onClick={[Function]}
                  type="submit"
                >
                  Publish
                </button>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <t
                    className="border-0"
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon=""
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Title"
                    labelClass=""
                    name="title"
                    onChange={[Function]}
                    size=""
                    success="right"
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />,
                  <t
                    className="border-0"
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon=""
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Description"
                    labelClass=""
                    name="description"
                    onChange={[Function]}
                    size=""
                    success="right"
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />,
                  <Quill
                    className="border-0"
                    formats={
                      Array [
                        "header",
                        "font",
                        "size",
                        "italic",
                        "underline",
                        "strike",
                        "bold",
                        "blockquote",
                        "list",
                        "link",
                        "image",
                        "video",
                        "code-block",
                        "indent",
                        "align",
                        "color",
                        "background",
                        "script",
                        "script",
                      ]
                    }
                    modules={
                      Object {
                        "toolbar": Object {
                          "container": Array [
                            Array [
                              Object {
                                "font": Array [],
                              },
                            ],
                            Array [
                              Object {
                                "size": Array [
                                  "small",
                                  false,
                                  "large",
                                  "huge",
                                ],
                              },
                            ],
                            Array [
                              "bold",
                              "italic",
                              "underline",
                              "strike",
                            ],
                            Array [
                              Object {
                                "script": "sub",
                              },
                              Object {
                                "script": "super",
                              },
                            ],
                            Array [
                              "blockquote",
                              "code-block",
                            ],
                            Array [
                              Object {
                                "list": "ordered",
                              },
                              Object {
                                "list": "bullet",
                              },
                            ],
                            Array [
                              Object {
                                "indent": "-1",
                              },
                              Object {
                                "indent": "+1",
                              },
                            ],
                            Array [
                              Object {
                                "color": Array [],
                              },
                              Object {
                                "background": Array [],
                              },
                            ],
                            Array [
                              "link",
                              "image",
                              "video",
                            ],
                            Array [
                              Object {
                                "align": Array [],
                              },
                            ],
                            Array [
                              "clean",
                            ],
                          ],
                        },
                      }
                    }
                    name="body"
                    onChange={[Function]}
                    placeholder="Article body"
                    theme="snow"
                  />,
                  <TagInput
                    className="border-0"
                    error="wrong"
                    group={true}
                    handleTags={[Function]}
                    label="Tags"
                    success="right"
                    tagList={Array []}
                    type="text"
                    validate={true}
                  />,
                ],
                "className": "grey-text",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "border-0",
                    "containerClass": "",
                    "disabled": false,
                    "error": "wrong",
                    "filled": false,
                    "gap": false,
                    "group": true,
                    "hint": undefined,
                    "icon": "",
                    "iconBrand": false,
                    "iconClass": "",
                    "iconLight": false,
                    "iconRegular": false,
                    "iconSize": undefined,
                    "id": undefined,
                    "label": "Title",
                    "labelClass": "",
                    "name": "title",
                    "onChange": [Function],
                    "size": "",
                    "success": "right",
                    "tag": "input",
                    "type": "text",
                    "validate": true,
                    "value": undefined,
                    "valueDefault": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "border-0",
                    "containerClass": "",
                    "disabled": false,
                    "error": "wrong",
                    "filled": false,
                    "gap": false,
                    "group": true,
                    "hint": undefined,
                    "icon": "",
                    "iconBrand": false,
                    "iconClass": "",
                    "iconLight": false,
                    "iconRegular": false,
                    "iconSize": undefined,
                    "id": undefined,
                    "label": "Description",
                    "labelClass": "",
                    "name": "description",
                    "onChange": [Function],
                    "size": "",
                    "success": "right",
                    "tag": "input",
                    "type": "text",
                    "validate": true,
                    "value": undefined,
                    "valueDefault": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "border-0",
                    "formats": Array [
                      "header",
                      "font",
                      "size",
                      "italic",
                      "underline",
                      "strike",
                      "bold",
                      "blockquote",
                      "list",
                      "link",
                      "image",
                      "video",
                      "code-block",
                      "indent",
                      "align",
                      "color",
                      "background",
                      "script",
                      "script",
                    ],
                    "modules": Object {
                      "toolbar": Object {
                        "container": Array [
                          Array [
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [
                                "small",
                                false,
                                "large",
                                "huge",
                              ],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                          ],
                          Array [
                            Object {
                              "script": "sub",
                            },
                            Object {
                              "script": "super",
                            },
                          ],
                          Array [
                            "blockquote",
                            "code-block",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            Object {
                              "indent": "-1",
                            },
                            Object {
                              "indent": "+1",
                            },
                          ],
                          Array [
                            Object {
                              "color": Array [],
                            },
                            Object {
                              "background": Array [],
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            Object {
                              "align": Array [],
                            },
                          ],
                          Array [
                            "clean",
                          ],
                        ],
                      },
                    },
                    "name": "body",
                    "onChange": [Function],
                    "placeholder": "Article body",
                    "theme": "snow",
                    "value": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "border-0",
                    "error": "wrong",
                    "group": true,
                    "handleTags": [Function],
                    "label": "Tags",
                    "success": "right",
                    "tagList": Array [],
                    "type": "text",
                    "validate": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="draft"
                  onClick={[Function]}
                  type="submit"
                >
                  Save Draft
                </button>,
                "className": "text-center",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Save Draft",
                  "className": "btn btn-primary btn-sm",
                  "id": "publish-btn",
                  "name": "draft",
                  "onClick": [Function],
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Save Draft",
                "type": "button",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="publish"
                  onClick={[Function]}
                  type="submit"
                >
                  Publish
                </button>,
                "className": "text-center",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Publish",
                  "className": "btn btn-primary btn-sm",
                  "id": "publish-btn",
                  "name": "publish",
                  "onClick": [Function],
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Publish",
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          tag="div"
        >
          <t
            lg={null}
            md="12"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <form>
              <div
                className="grey-text"
              >
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Title"
                  labelClass=""
                  name="title"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Description"
                  labelClass=""
                  name="description"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <Quill
                  className="border-0"
                  formats={
                    Array [
                      "header",
                      "font",
                      "size",
                      "italic",
                      "underline",
                      "strike",
                      "bold",
                      "blockquote",
                      "list",
                      "link",
                      "image",
                      "video",
                      "code-block",
                      "indent",
                      "align",
                      "color",
                      "background",
                      "script",
                      "script",
                    ]
                  }
                  modules={
                    Object {
                      "toolbar": Object {
                        "container": Array [
                          Array [
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [
                                "small",
                                false,
                                "large",
                                "huge",
                              ],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                          ],
                          Array [
                            Object {
                              "script": "sub",
                            },
                            Object {
                              "script": "super",
                            },
                          ],
                          Array [
                            "blockquote",
                            "code-block",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            Object {
                              "indent": "-1",
                            },
                            Object {
                              "indent": "+1",
                            },
                          ],
                          Array [
                            Object {
                              "color": Array [],
                            },
                            Object {
                              "background": Array [],
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            Object {
                              "align": Array [],
                            },
                          ],
                          Array [
                            "clean",
                          ],
                        ],
                      },
                    }
                  }
                  name="body"
                  onChange={[Function]}
                  placeholder="Article body"
                  theme="snow"
                />
                <TagInput
                  className="border-0"
                  error="wrong"
                  group={true}
                  handleTags={[Function]}
                  label="Tags"
                  success="right"
                  tagList={Array []}
                  type="text"
                  validate={true}
                />
              </div>
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="draft"
                  onClick={[Function]}
                  type="submit"
                >
                  Save Draft
                </button>
              </div>
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="publish"
                  onClick={[Function]}
                  type="submit"
                >
                  Publish
                </button>
              </div>
            </form>
          </t>
        </t>,
        "className": " mt-5 pt-5",
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            lg={null}
            md="12"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <form>
              <div
                className="grey-text"
              >
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Title"
                  labelClass=""
                  name="title"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Description"
                  labelClass=""
                  name="description"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <Quill
                  className="border-0"
                  formats={
                    Array [
                      "header",
                      "font",
                      "size",
                      "italic",
                      "underline",
                      "strike",
                      "bold",
                      "blockquote",
                      "list",
                      "link",
                      "image",
                      "video",
                      "code-block",
                      "indent",
                      "align",
                      "color",
                      "background",
                      "script",
                      "script",
                    ]
                  }
                  modules={
                    Object {
                      "toolbar": Object {
                        "container": Array [
                          Array [
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [
                                "small",
                                false,
                                "large",
                                "huge",
                              ],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                          ],
                          Array [
                            Object {
                              "script": "sub",
                            },
                            Object {
                              "script": "super",
                            },
                          ],
                          Array [
                            "blockquote",
                            "code-block",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            Object {
                              "indent": "-1",
                            },
                            Object {
                              "indent": "+1",
                            },
                          ],
                          Array [
                            Object {
                              "color": Array [],
                            },
                            Object {
                              "background": Array [],
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            Object {
                              "align": Array [],
                            },
                          ],
                          Array [
                            "clean",
                          ],
                        ],
                      },
                    }
                  }
                  name="body"
                  onChange={[Function]}
                  placeholder="Article body"
                  theme="snow"
                />
                <TagInput
                  className="border-0"
                  error="wrong"
                  group={true}
                  handleTags={[Function]}
                  label="Tags"
                  success="right"
                  tagList={Array []}
                  type="text"
                  validate={true}
                />
              </div>
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="draft"
                  onClick={[Function]}
                  type="submit"
                >
                  Save Draft
                </button>
              </div>
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="publish"
                  onClick={[Function]}
                  type="submit"
                >
                  Publish
                </button>
              </div>
            </form>
          </t>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form>
              <div
                className="grey-text"
              >
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Title"
                  labelClass=""
                  name="title"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <t
                  className="border-0"
                  containerClass=""
                  disabled={false}
                  error="wrong"
                  filled={false}
                  gap={false}
                  group={true}
                  icon=""
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Description"
                  labelClass=""
                  name="description"
                  onChange={[Function]}
                  size=""
                  success="right"
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <Quill
                  className="border-0"
                  formats={
                    Array [
                      "header",
                      "font",
                      "size",
                      "italic",
                      "underline",
                      "strike",
                      "bold",
                      "blockquote",
                      "list",
                      "link",
                      "image",
                      "video",
                      "code-block",
                      "indent",
                      "align",
                      "color",
                      "background",
                      "script",
                      "script",
                    ]
                  }
                  modules={
                    Object {
                      "toolbar": Object {
                        "container": Array [
                          Array [
                            Object {
                              "font": Array [],
                            },
                          ],
                          Array [
                            Object {
                              "size": Array [
                                "small",
                                false,
                                "large",
                                "huge",
                              ],
                            },
                          ],
                          Array [
                            "bold",
                            "italic",
                            "underline",
                            "strike",
                          ],
                          Array [
                            Object {
                              "script": "sub",
                            },
                            Object {
                              "script": "super",
                            },
                          ],
                          Array [
                            "blockquote",
                            "code-block",
                          ],
                          Array [
                            Object {
                              "list": "ordered",
                            },
                            Object {
                              "list": "bullet",
                            },
                          ],
                          Array [
                            Object {
                              "indent": "-1",
                            },
                            Object {
                              "indent": "+1",
                            },
                          ],
                          Array [
                            Object {
                              "color": Array [],
                            },
                            Object {
                              "background": Array [],
                            },
                          ],
                          Array [
                            "link",
                            "image",
                            "video",
                          ],
                          Array [
                            Object {
                              "align": Array [],
                            },
                          ],
                          Array [
                            "clean",
                          ],
                        ],
                      },
                    }
                  }
                  name="body"
                  onChange={[Function]}
                  placeholder="Article body"
                  theme="snow"
                />
                <TagInput
                  className="border-0"
                  error="wrong"
                  group={true}
                  handleTags={[Function]}
                  label="Tags"
                  success="right"
                  tagList={Array []}
                  type="text"
                  validate={true}
                />
              </div>
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="draft"
                  onClick={[Function]}
                  type="submit"
                >
                  Save Draft
                </button>
              </div>
              <div
                className="text-center"
              >
                <button
                  className="btn btn-primary btn-sm"
                  id="publish-btn"
                  name="publish"
                  onClick={[Function]}
                  type="submit"
                >
                  Publish
                </button>
              </div>
            </form>,
            "lg": null,
            "md": "12",
            "sm": null,
            "tag": "div",
            "xl": null,
            "xs": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="grey-text"
                >
                  <t
                    className="border-0"
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon=""
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Title"
                    labelClass=""
                    name="title"
                    onChange={[Function]}
                    size=""
                    success="right"
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <t
                    className="border-0"
                    containerClass=""
                    disabled={false}
                    error="wrong"
                    filled={false}
                    gap={false}
                    group={true}
                    icon=""
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Description"
                    labelClass=""
                    name="description"
                    onChange={[Function]}
                    size=""
                    success="right"
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <Quill
                    className="border-0"
                    formats={
                      Array [
                        "header",
                        "font",
                        "size",
                        "italic",
                        "underline",
                        "strike",
                        "bold",
                        "blockquote",
                        "list",
                        "link",
                        "image",
                        "video",
                        "code-block",
                        "indent",
                        "align",
                        "color",
                        "background",
                        "script",
                        "script",
                      ]
                    }
                    modules={
                      Object {
                        "toolbar": Object {
                          "container": Array [
                            Array [
                              Object {
                                "font": Array [],
                              },
                            ],
                            Array [
                              Object {
                                "size": Array [
                                  "small",
                                  false,
                                  "large",
                                  "huge",
                                ],
                              },
                            ],
                            Array [
                              "bold",
                              "italic",
                              "underline",
                              "strike",
                            ],
                            Array [
                              Object {
                                "script": "sub",
                              },
                              Object {
                                "script": "super",
                              },
                            ],
                            Array [
                              "blockquote",
                              "code-block",
                            ],
                            Array [
                              Object {
                                "list": "ordered",
                              },
                              Object {
                                "list": "bullet",
                              },
                            ],
                            Array [
                              Object {
                                "indent": "-1",
                              },
                              Object {
                                "indent": "+1",
                              },
                            ],
                            Array [
                              Object {
                                "color": Array [],
                              },
                              Object {
                                "background": Array [],
                              },
                            ],
                            Array [
                              "link",
                              "image",
                              "video",
                            ],
                            Array [
                              Object {
                                "align": Array [],
                              },
                            ],
                            Array [
                              "clean",
                            ],
                          ],
                        },
                      }
                    }
                    name="body"
                    onChange={[Function]}
                    placeholder="Article body"
                    theme="snow"
                  />
                  <TagInput
                    className="border-0"
                    error="wrong"
                    group={true}
                    handleTags={[Function]}
                    label="Tags"
                    success="right"
                    tagList={Array []}
                    type="text"
                    validate={true}
                  />
                </div>,
                <div
                  className="text-center"
                >
                  <button
                    className="btn btn-primary btn-sm"
                    id="publish-btn"
                    name="draft"
                    onClick={[Function]}
                    type="submit"
                  >
                    Save Draft
                  </button>
                </div>,
                <div
                  className="text-center"
                >
                  <button
                    className="btn btn-primary btn-sm"
                    id="publish-btn"
                    name="publish"
                    onClick={[Function]}
                    type="submit"
                  >
                    Publish
                  </button>
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <t
                      className="border-0"
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon=""
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Title"
                      labelClass=""
                      name="title"
                      onChange={[Function]}
                      size=""
                      success="right"
                      tag="input"
                      type="text"
                      validate={true}
                      valueDefault=""
                    />,
                    <t
                      className="border-0"
                      containerClass=""
                      disabled={false}
                      error="wrong"
                      filled={false}
                      gap={false}
                      group={true}
                      icon=""
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Description"
                      labelClass=""
                      name="description"
                      onChange={[Function]}
                      size=""
                      success="right"
                      tag="input"
                      type="text"
                      validate={true}
                      valueDefault=""
                    />,
                    <Quill
                      className="border-0"
                      formats={
                        Array [
                          "header",
                          "font",
                          "size",
                          "italic",
                          "underline",
                          "strike",
                          "bold",
                          "blockquote",
                          "list",
                          "link",
                          "image",
                          "video",
                          "code-block",
                          "indent",
                          "align",
                          "color",
                          "background",
                          "script",
                          "script",
                        ]
                      }
                      modules={
                        Object {
                          "toolbar": Object {
                            "container": Array [
                              Array [
                                Object {
                                  "font": Array [],
                                },
                              ],
                              Array [
                                Object {
                                  "size": Array [
                                    "small",
                                    false,
                                    "large",
                                    "huge",
                                  ],
                                },
                              ],
                              Array [
                                "bold",
                                "italic",
                                "underline",
                                "strike",
                              ],
                              Array [
                                Object {
                                  "script": "sub",
                                },
                                Object {
                                  "script": "super",
                                },
                              ],
                              Array [
                                "blockquote",
                                "code-block",
                              ],
                              Array [
                                Object {
                                  "list": "ordered",
                                },
                                Object {
                                  "list": "bullet",
                                },
                              ],
                              Array [
                                Object {
                                  "indent": "-1",
                                },
                                Object {
                                  "indent": "+1",
                                },
                              ],
                              Array [
                                Object {
                                  "color": Array [],
                                },
                                Object {
                                  "background": Array [],
                                },
                              ],
                              Array [
                                "link",
                                "image",
                                "video",
                              ],
                              Array [
                                Object {
                                  "align": Array [],
                                },
                              ],
                              Array [
                                "clean",
                              ],
                            ],
                          },
                        }
                      }
                      name="body"
                      onChange={[Function]}
                      placeholder="Article body"
                      theme="snow"
                    />,
                    <TagInput
                      className="border-0"
                      error="wrong"
                      group={true}
                      handleTags={[Function]}
                      label="Tags"
                      success="right"
                      tagList={Array []}
                      type="text"
                      validate={true}
                    />,
                  ],
                  "className": "grey-text",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "border-0",
                      "containerClass": "",
                      "disabled": false,
                      "error": "wrong",
                      "filled": false,
                      "gap": false,
                      "group": true,
                      "hint": undefined,
                      "icon": "",
                      "iconBrand": false,
                      "iconClass": "",
                      "iconLight": false,
                      "iconRegular": false,
                      "iconSize": undefined,
                      "id": undefined,
                      "label": "Title",
                      "labelClass": "",
                      "name": "title",
                      "onChange": [Function],
                      "size": "",
                      "success": "right",
                      "tag": "input",
                      "type": "text",
                      "validate": true,
                      "value": undefined,
                      "valueDefault": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "border-0",
                      "containerClass": "",
                      "disabled": false,
                      "error": "wrong",
                      "filled": false,
                      "gap": false,
                      "group": true,
                      "hint": undefined,
                      "icon": "",
                      "iconBrand": false,
                      "iconClass": "",
                      "iconLight": false,
                      "iconRegular": false,
                      "iconSize": undefined,
                      "id": undefined,
                      "label": "Description",
                      "labelClass": "",
                      "name": "description",
                      "onChange": [Function],
                      "size": "",
                      "success": "right",
                      "tag": "input",
                      "type": "text",
                      "validate": true,
                      "value": undefined,
                      "valueDefault": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "border-0",
                      "formats": Array [
                        "header",
                        "font",
                        "size",
                        "italic",
                        "underline",
                        "strike",
                        "bold",
                        "blockquote",
                        "list",
                        "link",
                        "image",
                        "video",
                        "code-block",
                        "indent",
                        "align",
                        "color",
                        "background",
                        "script",
                        "script",
                      ],
                      "modules": Object {
                        "toolbar": Object {
                          "container": Array [
                            Array [
                              Object {
                                "font": Array [],
                              },
                            ],
                            Array [
                              Object {
                                "size": Array [
                                  "small",
                                  false,
                                  "large",
                                  "huge",
                                ],
                              },
                            ],
                            Array [
                              "bold",
                              "italic",
                              "underline",
                              "strike",
                            ],
                            Array [
                              Object {
                                "script": "sub",
                              },
                              Object {
                                "script": "super",
                              },
                            ],
                            Array [
                              "blockquote",
                              "code-block",
                            ],
                            Array [
                              Object {
                                "list": "ordered",
                              },
                              Object {
                                "list": "bullet",
                              },
                            ],
                            Array [
                              Object {
                                "indent": "-1",
                              },
                              Object {
                                "indent": "+1",
                              },
                            ],
                            Array [
                              Object {
                                "color": Array [],
                              },
                              Object {
                                "background": Array [],
                              },
                            ],
                            Array [
                              "link",
                              "image",
                              "video",
                            ],
                            Array [
                              Object {
                                "align": Array [],
                              },
                            ],
                            Array [
                              "clean",
                            ],
                          ],
                        },
                      },
                      "name": "body",
                      "onChange": [Function],
                      "placeholder": "Article body",
                      "theme": "snow",
                      "value": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "border-0",
                      "error": "wrong",
                      "group": true,
                      "handleTags": [Function],
                      "label": "Tags",
                      "success": "right",
                      "tagList": Array [],
                      "type": "text",
                      "validate": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="btn btn-primary btn-sm"
                    id="publish-btn"
                    name="draft"
                    onClick={[Function]}
                    type="submit"
                  >
                    Save Draft
                  </button>,
                  "className": "text-center",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Save Draft",
                    "className": "btn btn-primary btn-sm",
                    "id": "publish-btn",
                    "name": "draft",
                    "onClick": [Function],
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Save Draft",
                  "type": "button",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="btn btn-primary btn-sm"
                    id="publish-btn"
                    name="publish"
                    onClick={[Function]}
                    type="submit"
                  >
                    Publish
                  </button>,
                  "className": "text-center",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Publish",
                    "className": "btn btn-primary btn-sm",
                    "id": "publish-btn",
                    "name": "publish",
                    "onClick": [Function],
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Publish",
                  "type": "button",
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
