// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signform test matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignupForm
    errors={Object {}}
    facebookLoginHandler={[MockFunction]}
    googleLoginHandler={[MockFunction]}
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <t
        className="flex flex-center"
        tag="div"
      >
        <t
          lg="7"
          md={null}
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <form
            onSubmit={[MockFunction]}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 bg-primary"
              >
                <t
                  className="d-flex justify-content-center"
                  tag="div"
                >
                  <h3
                    className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                  >
                    Sign Up
                  </h3>
                </t>
              </div>
              <t
                className="mx-4 mt-4 grey-text"
                tag="div"
              >
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="user"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your Username"
                  labelClass=""
                  name="username"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid p-0"
                />
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="envelope"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your email"
                  labelClass=""
                  name="email"
                  onChange={[MockFunction]}
                  size=""
                  success=""
                  tag="input"
                  type="email"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <t
                  className="form-control mb-0 form-control-lg"
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="lock"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your password"
                  labelClass=""
                  name="password"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="password"
                  validate={false}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <div
                  className="text-center mb-4 mt-5"
                >
                  <t
                    className="btn-block z-depth-2 bg-primary"
                    color="bg-primary"
                    tag="button"
                    type="submit"
                    value="submit"
                  >
                    Sign up
                  </t>
                </div>
                <p
                  className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                >
                  or Sign in with:
                </p>
                <div
                  className="row my-3 d-flex justify-content-center"
                >
                  <withRouter(Connect(SocialLoginView)) />
                </div>
                <t
                  className="mx-5 pt-3 mb-1"
                />
                <p
                  className="font-small grey-text d-flex justify-content-center"
                >
                  Have an account?
                  <a
                    className="blue-text ml-1"
                    href="/login"
                  >
                    Log in
                  </a>
                </p>
              </t>
            </t>
          </form>
        </t>
      </t>,
      "className": "mt-3 pt-6 w-sm-100 w-md-75 mt-5 mb-5",
      "fluid": false,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          lg="7"
          md={null}
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <form
            onSubmit={[MockFunction]}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 bg-primary"
              >
                <t
                  className="d-flex justify-content-center"
                  tag="div"
                >
                  <h3
                    className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                  >
                    Sign Up
                  </h3>
                </t>
              </div>
              <t
                className="mx-4 mt-4 grey-text"
                tag="div"
              >
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="user"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your Username"
                  labelClass=""
                  name="username"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid p-0"
                />
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="envelope"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your email"
                  labelClass=""
                  name="email"
                  onChange={[MockFunction]}
                  size=""
                  success=""
                  tag="input"
                  type="email"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <t
                  className="form-control mb-0 form-control-lg"
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="lock"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your password"
                  labelClass=""
                  name="password"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="password"
                  validate={false}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <div
                  className="text-center mb-4 mt-5"
                >
                  <t
                    className="btn-block z-depth-2 bg-primary"
                    color="bg-primary"
                    tag="button"
                    type="submit"
                    value="submit"
                  >
                    Sign up
                  </t>
                </div>
                <p
                  className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                >
                  or Sign in with:
                </p>
                <div
                  className="row my-3 d-flex justify-content-center"
                >
                  <withRouter(Connect(SocialLoginView)) />
                </div>
                <t
                  className="mx-5 pt-3 mb-1"
                />
                <p
                  className="font-small grey-text d-flex justify-content-center"
                >
                  Have an account?
                  <a
                    className="blue-text ml-1"
                    href="/login"
                  >
                    Log in
                  </a>
                </p>
              </t>
            </t>
          </form>
        </t>,
        "className": "flex flex-center",
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form
            onSubmit={[MockFunction]}
          >
            <t
              tag="div"
            >
              <div
                className="header pt-3 bg-primary"
              >
                <t
                  className="d-flex justify-content-center"
                  tag="div"
                >
                  <h3
                    className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                  >
                    Sign Up
                  </h3>
                </t>
              </div>
              <t
                className="mx-4 mt-4 grey-text"
                tag="div"
              >
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="user"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your Username"
                  labelClass=""
                  name="username"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid p-0"
                />
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="envelope"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your email"
                  labelClass=""
                  name="email"
                  onChange={[MockFunction]}
                  size=""
                  success=""
                  tag="input"
                  type="email"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <t
                  className="form-control mb-0 form-control-lg"
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="lock"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your password"
                  labelClass=""
                  name="password"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="password"
                  validate={false}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <div
                  className="text-center mb-4 mt-5"
                >
                  <t
                    className="btn-block z-depth-2 bg-primary"
                    color="bg-primary"
                    tag="button"
                    type="submit"
                    value="submit"
                  >
                    Sign up
                  </t>
                </div>
                <p
                  className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                >
                  or Sign in with:
                </p>
                <div
                  className="row my-3 d-flex justify-content-center"
                >
                  <withRouter(Connect(SocialLoginView)) />
                </div>
                <t
                  className="mx-5 pt-3 mb-1"
                />
                <p
                  className="font-small grey-text d-flex justify-content-center"
                >
                  Have an account?
                  <a
                    className="blue-text ml-1"
                    href="/login"
                  >
                    Log in
                  </a>
                </p>
              </t>
            </t>
          </form>,
          "lg": "7",
          "md": null,
          "sm": null,
          "tag": "div",
          "xl": null,
          "xs": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <t
              tag="div"
            >
              <div
                className="header pt-3 bg-primary"
              >
                <t
                  className="d-flex justify-content-center"
                  tag="div"
                >
                  <h3
                    className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                  >
                    Sign Up
                  </h3>
                </t>
              </div>
              <t
                className="mx-4 mt-4 grey-text"
                tag="div"
              >
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="user"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your Username"
                  labelClass=""
                  name="username"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="text"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid p-0"
                />
                <t
                  className="form-control mb-0 form-control-lg "
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="envelope"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your email"
                  labelClass=""
                  name="email"
                  onChange={[MockFunction]}
                  size=""
                  success=""
                  tag="input"
                  type="email"
                  validate={true}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <t
                  className="form-control mb-0 form-control-lg"
                  containerClass="mb-0"
                  disabled={false}
                  error=""
                  filled={false}
                  gap={false}
                  group={true}
                  icon="lock"
                  iconBrand={false}
                  iconClass=""
                  iconLight={false}
                  iconRegular={false}
                  label="Your password"
                  labelClass=""
                  name="password"
                  onChange={[MockFunction]}
                  required={true}
                  size=""
                  success=""
                  tag="input"
                  type="password"
                  validate={false}
                  valueDefault=""
                />
                <p
                  className=" red-text is-invalid"
                />
                <div
                  className="text-center mb-4 mt-5"
                >
                  <t
                    className="btn-block z-depth-2 bg-primary"
                    color="bg-primary"
                    tag="button"
                    type="submit"
                    value="submit"
                  >
                    Sign up
                  </t>
                </div>
                <p
                  className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                >
                  or Sign in with:
                </p>
                <div
                  className="row my-3 d-flex justify-content-center"
                >
                  <withRouter(Connect(SocialLoginView)) />
                </div>
                <t
                  className="mx-5 pt-3 mb-1"
                />
                <p
                  className="font-small grey-text d-flex justify-content-center"
                >
                  Have an account?
                  <a
                    className="blue-text ml-1"
                    href="/login"
                  >
                    Log in
                  </a>
                </p>
              </t>
            </t>,
            "onSubmit": [MockFunction],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <div
                  className="header pt-3 bg-primary"
                >
                  <t
                    className="d-flex justify-content-center"
                    tag="div"
                  >
                    <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>
                  </t>
                </div>,
                <t
                  className="mx-4 mt-4 grey-text"
                  tag="div"
                >
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="user"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your Username"
                    labelClass=""
                    name="username"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid p-0"
                  />
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    size=""
                    success=""
                    tag="input"
                    type="email"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <t
                    className="form-control mb-0 form-control-lg"
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={false}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <div
                    className="text-center mb-4 mt-5"
                  >
                    <t
                      className="btn-block z-depth-2 bg-primary"
                      color="bg-primary"
                      tag="button"
                      type="submit"
                      value="submit"
                    >
                      Sign up
                    </t>
                  </div>
                  <p
                    className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                  >
                    or Sign in with:
                  </p>
                  <div
                    className="row my-3 d-flex justify-content-center"
                  >
                    <withRouter(Connect(SocialLoginView)) />
                  </div>
                  <t
                    className="mx-5 pt-3 mb-1"
                  />
                  <p
                    className="font-small grey-text d-flex justify-content-center"
                  >
                    Have an account?
                    <a
                      className="blue-text ml-1"
                      href="/login"
                    >
                      Log in
                    </a>
                  </p>
                </t>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <t
                    className="d-flex justify-content-center"
                    tag="div"
                  >
                    <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>
                  </t>,
                  "className": "header pt-3 bg-primary",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>,
                    "className": "d-flex justify-content-center",
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sign Up",
                      "className": "font-weight-bold white-text mt-3 mb-4 pb-1 mx-5",
                    },
                    "ref": null,
                    "rendered": "Sign Up",
                    "type": "h3",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <t
                      className="form-control mb-0 form-control-lg "
                      containerClass="mb-0"
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="user"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Your Username"
                      labelClass=""
                      name="username"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="text"
                      validate={true}
                      valueDefault=""
                    />,
                    <p
                      className=" red-text is-invalid p-0"
                    />,
                    <t
                      className="form-control mb-0 form-control-lg "
                      containerClass="mb-0"
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      size=""
                      success=""
                      tag="input"
                      type="email"
                      validate={true}
                      valueDefault=""
                    />,
                    <p
                      className=" red-text is-invalid"
                    />,
                    <t
                      className="form-control mb-0 form-control-lg"
                      containerClass="mb-0"
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Your password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={false}
                      valueDefault=""
                    />,
                    <p
                      className=" red-text is-invalid"
                    />,
                    <div
                      className="text-center mb-4 mt-5"
                    >
                      <t
                        className="btn-block z-depth-2 bg-primary"
                        color="bg-primary"
                        tag="button"
                        type="submit"
                        value="submit"
                      >
                        Sign up
                      </t>
                    </div>,
                    <p
                      className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                    >
                      or Sign in with:
                    </p>,
                    <div
                      className="row my-3 d-flex justify-content-center"
                    >
                      <withRouter(Connect(SocialLoginView)) />
                    </div>,
                    <t
                      className="mx-5 pt-3 mb-1"
                    />,
                    <p
                      className="font-small grey-text d-flex justify-content-center"
                    >
                      Have an account?
                      <a
                        className="blue-text ml-1"
                        href="/login"
                      >
                        Log in
                      </a>
                    </p>,
                  ],
                  "className": "mx-4 mt-4 grey-text",
                  "tag": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control mb-0 form-control-lg ",
                      "containerClass": "mb-0",
                      "disabled": false,
                      "error": "",
                      "filled": false,
                      "gap": false,
                      "group": true,
                      "hint": undefined,
                      "icon": "user",
                      "iconBrand": false,
                      "iconClass": "",
                      "iconLight": false,
                      "iconRegular": false,
                      "iconSize": undefined,
                      "id": undefined,
                      "label": "Your Username",
                      "labelClass": "",
                      "name": "username",
                      "onChange": [MockFunction],
                      "required": true,
                      "size": "",
                      "success": "",
                      "tag": "input",
                      "type": "text",
                      "validate": true,
                      "valueDefault": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": " red-text is-invalid p-0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control mb-0 form-control-lg ",
                      "containerClass": "mb-0",
                      "disabled": false,
                      "error": "",
                      "filled": false,
                      "gap": false,
                      "group": true,
                      "hint": undefined,
                      "icon": "envelope",
                      "iconBrand": false,
                      "iconClass": "",
                      "iconLight": false,
                      "iconRegular": false,
                      "iconSize": undefined,
                      "id": undefined,
                      "label": "Your email",
                      "labelClass": "",
                      "name": "email",
                      "onChange": [MockFunction],
                      "size": "",
                      "success": "",
                      "tag": "input",
                      "type": "email",
                      "validate": true,
                      "valueDefault": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": " red-text is-invalid",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control mb-0 form-control-lg",
                      "containerClass": "mb-0",
                      "disabled": false,
                      "error": "",
                      "filled": false,
                      "gap": false,
                      "group": true,
                      "hint": undefined,
                      "icon": "lock",
                      "iconBrand": false,
                      "iconClass": "",
                      "iconLight": false,
                      "iconRegular": false,
                      "iconSize": undefined,
                      "id": undefined,
                      "label": "Your password",
                      "labelClass": "",
                      "name": "password",
                      "onChange": [MockFunction],
                      "required": true,
                      "size": "",
                      "success": "",
                      "tag": "input",
                      "type": "password",
                      "validate": false,
                      "valueDefault": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": " red-text is-invalid",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <t
                        className="btn-block z-depth-2 bg-primary"
                        color="bg-primary"
                        tag="button"
                        type="submit"
                        value="submit"
                      >
                        Sign up
                      </t>,
                      "className": "text-center mb-4 mt-5",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Sign up",
                        "className": "btn-block z-depth-2 bg-primary",
                        "color": "bg-primary",
                        "tag": "button",
                        "type": "submit",
                        "value": "submit",
                      },
                      "ref": null,
                      "rendered": "Sign up",
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "or Sign in with:",
                      "className": "font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2",
                    },
                    "ref": null,
                    "rendered": "or Sign in with:",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <withRouter(Connect(SocialLoginView)) />,
                      "className": "row my-3 d-flex justify-content-center",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "mx-5 pt-3 mb-1",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Have an account?",
                        <a
                          className="blue-text ml-1"
                          href="/login"
                        >
                          Log in
                        </a>,
                      ],
                      "className": "font-small grey-text d-flex justify-content-center",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Have an account?",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Log in",
                          "className": "blue-text ml-1",
                          "href": "/login",
                        },
                        "ref": null,
                        "rendered": "Log in",
                        "type": "a",
                      },
                    ],
                    "type": "p",
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "form",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          className="flex flex-center"
          tag="div"
        >
          <t
            lg="7"
            md={null}
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <form
              onSubmit={[MockFunction]}
            >
              <t
                tag="div"
              >
                <div
                  className="header pt-3 bg-primary"
                >
                  <t
                    className="d-flex justify-content-center"
                    tag="div"
                  >
                    <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>
                  </t>
                </div>
                <t
                  className="mx-4 mt-4 grey-text"
                  tag="div"
                >
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="user"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your Username"
                    labelClass=""
                    name="username"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid p-0"
                  />
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    size=""
                    success=""
                    tag="input"
                    type="email"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <t
                    className="form-control mb-0 form-control-lg"
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={false}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <div
                    className="text-center mb-4 mt-5"
                  >
                    <t
                      className="btn-block z-depth-2 bg-primary"
                      color="bg-primary"
                      tag="button"
                      type="submit"
                      value="submit"
                    >
                      Sign up
                    </t>
                  </div>
                  <p
                    className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                  >
                    or Sign in with:
                  </p>
                  <div
                    className="row my-3 d-flex justify-content-center"
                  >
                    <withRouter(Connect(SocialLoginView)) />
                  </div>
                  <t
                    className="mx-5 pt-3 mb-1"
                  />
                  <p
                    className="font-small grey-text d-flex justify-content-center"
                  >
                    Have an account?
                    <a
                      className="blue-text ml-1"
                      href="/login"
                    >
                      Log in
                    </a>
                  </p>
                </t>
              </t>
            </form>
          </t>
        </t>,
        "className": "mt-3 pt-6 w-sm-100 w-md-75 mt-5 mb-5",
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            lg="7"
            md={null}
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <form
              onSubmit={[MockFunction]}
            >
              <t
                tag="div"
              >
                <div
                  className="header pt-3 bg-primary"
                >
                  <t
                    className="d-flex justify-content-center"
                    tag="div"
                  >
                    <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>
                  </t>
                </div>
                <t
                  className="mx-4 mt-4 grey-text"
                  tag="div"
                >
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="user"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your Username"
                    labelClass=""
                    name="username"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid p-0"
                  />
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    size=""
                    success=""
                    tag="input"
                    type="email"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <t
                    className="form-control mb-0 form-control-lg"
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={false}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <div
                    className="text-center mb-4 mt-5"
                  >
                    <t
                      className="btn-block z-depth-2 bg-primary"
                      color="bg-primary"
                      tag="button"
                      type="submit"
                      value="submit"
                    >
                      Sign up
                    </t>
                  </div>
                  <p
                    className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                  >
                    or Sign in with:
                  </p>
                  <div
                    className="row my-3 d-flex justify-content-center"
                  >
                    <withRouter(Connect(SocialLoginView)) />
                  </div>
                  <t
                    className="mx-5 pt-3 mb-1"
                  />
                  <p
                    className="font-small grey-text d-flex justify-content-center"
                  >
                    Have an account?
                    <a
                      className="blue-text ml-1"
                      href="/login"
                    >
                      Log in
                    </a>
                  </p>
                </t>
              </t>
            </form>
          </t>,
          "className": "flex flex-center",
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              onSubmit={[MockFunction]}
            >
              <t
                tag="div"
              >
                <div
                  className="header pt-3 bg-primary"
                >
                  <t
                    className="d-flex justify-content-center"
                    tag="div"
                  >
                    <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>
                  </t>
                </div>
                <t
                  className="mx-4 mt-4 grey-text"
                  tag="div"
                >
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="user"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your Username"
                    labelClass=""
                    name="username"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid p-0"
                  />
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    size=""
                    success=""
                    tag="input"
                    type="email"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <t
                    className="form-control mb-0 form-control-lg"
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={false}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <div
                    className="text-center mb-4 mt-5"
                  >
                    <t
                      className="btn-block z-depth-2 bg-primary"
                      color="bg-primary"
                      tag="button"
                      type="submit"
                      value="submit"
                    >
                      Sign up
                    </t>
                  </div>
                  <p
                    className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                  >
                    or Sign in with:
                  </p>
                  <div
                    className="row my-3 d-flex justify-content-center"
                  >
                    <withRouter(Connect(SocialLoginView)) />
                  </div>
                  <t
                    className="mx-5 pt-3 mb-1"
                  />
                  <p
                    className="font-small grey-text d-flex justify-content-center"
                  >
                    Have an account?
                    <a
                      className="blue-text ml-1"
                      href="/login"
                    >
                      Log in
                    </a>
                  </p>
                </t>
              </t>
            </form>,
            "lg": "7",
            "md": null,
            "sm": null,
            "tag": "div",
            "xl": null,
            "xs": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <t
                tag="div"
              >
                <div
                  className="header pt-3 bg-primary"
                >
                  <t
                    className="d-flex justify-content-center"
                    tag="div"
                  >
                    <h3
                      className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                    >
                      Sign Up
                    </h3>
                  </t>
                </div>
                <t
                  className="mx-4 mt-4 grey-text"
                  tag="div"
                >
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="user"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your Username"
                    labelClass=""
                    name="username"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="text"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid p-0"
                  />
                  <t
                    className="form-control mb-0 form-control-lg "
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="envelope"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your email"
                    labelClass=""
                    name="email"
                    onChange={[MockFunction]}
                    size=""
                    success=""
                    tag="input"
                    type="email"
                    validate={true}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <t
                    className="form-control mb-0 form-control-lg"
                    containerClass="mb-0"
                    disabled={false}
                    error=""
                    filled={false}
                    gap={false}
                    group={true}
                    icon="lock"
                    iconBrand={false}
                    iconClass=""
                    iconLight={false}
                    iconRegular={false}
                    label="Your password"
                    labelClass=""
                    name="password"
                    onChange={[MockFunction]}
                    required={true}
                    size=""
                    success=""
                    tag="input"
                    type="password"
                    validate={false}
                    valueDefault=""
                  />
                  <p
                    className=" red-text is-invalid"
                  />
                  <div
                    className="text-center mb-4 mt-5"
                  >
                    <t
                      className="btn-block z-depth-2 bg-primary"
                      color="bg-primary"
                      tag="button"
                      type="submit"
                      value="submit"
                    >
                      Sign up
                    </t>
                  </div>
                  <p
                    className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                  >
                    or Sign in with:
                  </p>
                  <div
                    className="row my-3 d-flex justify-content-center"
                  >
                    <withRouter(Connect(SocialLoginView)) />
                  </div>
                  <t
                    className="mx-5 pt-3 mb-1"
                  />
                  <p
                    className="font-small grey-text d-flex justify-content-center"
                  >
                    Have an account?
                    <a
                      className="blue-text ml-1"
                      href="/login"
                    >
                      Log in
                    </a>
                  </p>
                </t>
              </t>,
              "onSubmit": [MockFunction],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <div
                    className="header pt-3 bg-primary"
                  >
                    <t
                      className="d-flex justify-content-center"
                      tag="div"
                    >
                      <h3
                        className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                      >
                        Sign Up
                      </h3>
                    </t>
                  </div>,
                  <t
                    className="mx-4 mt-4 grey-text"
                    tag="div"
                  >
                    <t
                      className="form-control mb-0 form-control-lg "
                      containerClass="mb-0"
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="user"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Your Username"
                      labelClass=""
                      name="username"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="text"
                      validate={true}
                      valueDefault=""
                    />
                    <p
                      className=" red-text is-invalid p-0"
                    />
                    <t
                      className="form-control mb-0 form-control-lg "
                      containerClass="mb-0"
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="envelope"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Your email"
                      labelClass=""
                      name="email"
                      onChange={[MockFunction]}
                      size=""
                      success=""
                      tag="input"
                      type="email"
                      validate={true}
                      valueDefault=""
                    />
                    <p
                      className=" red-text is-invalid"
                    />
                    <t
                      className="form-control mb-0 form-control-lg"
                      containerClass="mb-0"
                      disabled={false}
                      error=""
                      filled={false}
                      gap={false}
                      group={true}
                      icon="lock"
                      iconBrand={false}
                      iconClass=""
                      iconLight={false}
                      iconRegular={false}
                      label="Your password"
                      labelClass=""
                      name="password"
                      onChange={[MockFunction]}
                      required={true}
                      size=""
                      success=""
                      tag="input"
                      type="password"
                      validate={false}
                      valueDefault=""
                    />
                    <p
                      className=" red-text is-invalid"
                    />
                    <div
                      className="text-center mb-4 mt-5"
                    >
                      <t
                        className="btn-block z-depth-2 bg-primary"
                        color="bg-primary"
                        tag="button"
                        type="submit"
                        value="submit"
                      >
                        Sign up
                      </t>
                    </div>
                    <p
                      className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                    >
                      or Sign in with:
                    </p>
                    <div
                      className="row my-3 d-flex justify-content-center"
                    >
                      <withRouter(Connect(SocialLoginView)) />
                    </div>
                    <t
                      className="mx-5 pt-3 mb-1"
                    />
                    <p
                      className="font-small grey-text d-flex justify-content-center"
                    >
                      Have an account?
                      <a
                        className="blue-text ml-1"
                        href="/login"
                      >
                        Log in
                      </a>
                    </p>
                  </t>,
                ],
                "tag": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <t
                      className="d-flex justify-content-center"
                      tag="div"
                    >
                      <h3
                        className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                      >
                        Sign Up
                      </h3>
                    </t>,
                    "className": "header pt-3 bg-primary",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h3
                        className="font-weight-bold white-text mt-3 mb-4 pb-1 mx-5"
                      >
                        Sign Up
                      </h3>,
                      "className": "d-flex justify-content-center",
                      "tag": "div",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Sign Up",
                        "className": "font-weight-bold white-text mt-3 mb-4 pb-1 mx-5",
                      },
                      "ref": null,
                      "rendered": "Sign Up",
                      "type": "h3",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <t
                        className="form-control mb-0 form-control-lg "
                        containerClass="mb-0"
                        disabled={false}
                        error=""
                        filled={false}
                        gap={false}
                        group={true}
                        icon="user"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Your Username"
                        labelClass=""
                        name="username"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success=""
                        tag="input"
                        type="text"
                        validate={true}
                        valueDefault=""
                      />,
                      <p
                        className=" red-text is-invalid p-0"
                      />,
                      <t
                        className="form-control mb-0 form-control-lg "
                        containerClass="mb-0"
                        disabled={false}
                        error=""
                        filled={false}
                        gap={false}
                        group={true}
                        icon="envelope"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Your email"
                        labelClass=""
                        name="email"
                        onChange={[MockFunction]}
                        size=""
                        success=""
                        tag="input"
                        type="email"
                        validate={true}
                        valueDefault=""
                      />,
                      <p
                        className=" red-text is-invalid"
                      />,
                      <t
                        className="form-control mb-0 form-control-lg"
                        containerClass="mb-0"
                        disabled={false}
                        error=""
                        filled={false}
                        gap={false}
                        group={true}
                        icon="lock"
                        iconBrand={false}
                        iconClass=""
                        iconLight={false}
                        iconRegular={false}
                        label="Your password"
                        labelClass=""
                        name="password"
                        onChange={[MockFunction]}
                        required={true}
                        size=""
                        success=""
                        tag="input"
                        type="password"
                        validate={false}
                        valueDefault=""
                      />,
                      <p
                        className=" red-text is-invalid"
                      />,
                      <div
                        className="text-center mb-4 mt-5"
                      >
                        <t
                          className="btn-block z-depth-2 bg-primary"
                          color="bg-primary"
                          tag="button"
                          type="submit"
                          value="submit"
                        >
                          Sign up
                        </t>
                      </div>,
                      <p
                        className="font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2"
                      >
                        or Sign in with:
                      </p>,
                      <div
                        className="row my-3 d-flex justify-content-center"
                      >
                        <withRouter(Connect(SocialLoginView)) />
                      </div>,
                      <t
                        className="mx-5 pt-3 mb-1"
                      />,
                      <p
                        className="font-small grey-text d-flex justify-content-center"
                      >
                        Have an account?
                        <a
                          className="blue-text ml-1"
                          href="/login"
                        >
                          Log in
                        </a>
                      </p>,
                    ],
                    "className": "mx-4 mt-4 grey-text",
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control mb-0 form-control-lg ",
                        "containerClass": "mb-0",
                        "disabled": false,
                        "error": "",
                        "filled": false,
                        "gap": false,
                        "group": true,
                        "hint": undefined,
                        "icon": "user",
                        "iconBrand": false,
                        "iconClass": "",
                        "iconLight": false,
                        "iconRegular": false,
                        "iconSize": undefined,
                        "id": undefined,
                        "label": "Your Username",
                        "labelClass": "",
                        "name": "username",
                        "onChange": [MockFunction],
                        "required": true,
                        "size": "",
                        "success": "",
                        "tag": "input",
                        "type": "text",
                        "validate": true,
                        "valueDefault": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": " red-text is-invalid p-0",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control mb-0 form-control-lg ",
                        "containerClass": "mb-0",
                        "disabled": false,
                        "error": "",
                        "filled": false,
                        "gap": false,
                        "group": true,
                        "hint": undefined,
                        "icon": "envelope",
                        "iconBrand": false,
                        "iconClass": "",
                        "iconLight": false,
                        "iconRegular": false,
                        "iconSize": undefined,
                        "id": undefined,
                        "label": "Your email",
                        "labelClass": "",
                        "name": "email",
                        "onChange": [MockFunction],
                        "size": "",
                        "success": "",
                        "tag": "input",
                        "type": "email",
                        "validate": true,
                        "valueDefault": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": " red-text is-invalid",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control mb-0 form-control-lg",
                        "containerClass": "mb-0",
                        "disabled": false,
                        "error": "",
                        "filled": false,
                        "gap": false,
                        "group": true,
                        "hint": undefined,
                        "icon": "lock",
                        "iconBrand": false,
                        "iconClass": "",
                        "iconLight": false,
                        "iconRegular": false,
                        "iconSize": undefined,
                        "id": undefined,
                        "label": "Your password",
                        "labelClass": "",
                        "name": "password",
                        "onChange": [MockFunction],
                        "required": true,
                        "size": "",
                        "success": "",
                        "tag": "input",
                        "type": "password",
                        "validate": false,
                        "valueDefault": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": " red-text is-invalid",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <t
                          className="btn-block z-depth-2 bg-primary"
                          color="bg-primary"
                          tag="button"
                          type="submit"
                          value="submit"
                        >
                          Sign up
                        </t>,
                        "className": "text-center mb-4 mt-5",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Sign up",
                          "className": "btn-block z-depth-2 bg-primary",
                          "color": "bg-primary",
                          "tag": "button",
                          "type": "submit",
                          "value": "submit",
                        },
                        "ref": null,
                        "rendered": "Sign up",
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "or Sign in with:",
                        "className": "font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2",
                      },
                      "ref": null,
                      "rendered": "or Sign in with:",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <withRouter(Connect(SocialLoginView)) />,
                        "className": "row my-3 d-flex justify-content-center",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "mx-5 pt-3 mb-1",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Have an account?",
                          <a
                            className="blue-text ml-1"
                            href="/login"
                          >
                            Log in
                          </a>,
                        ],
                        "className": "font-small grey-text d-flex justify-content-center",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Have an account?",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Log in",
                            "className": "blue-text ml-1",
                            "href": "/login",
                          },
                          "ref": null,
                          "rendered": "Log in",
                          "type": "a",
                        },
                      ],
                      "type": "p",
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "form",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
